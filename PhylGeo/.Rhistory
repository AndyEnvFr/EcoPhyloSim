for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
pvals <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvals[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 100,repetitions = 1000)
}
names(pvals) <- names(outList)
pvals <- pvals[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvals)){
z[i] <- median(pvals[[i]], na.rm = T)
zSD[i] <- sd(pvals[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
require(picante)
require(PhylGeo)
require(shape)
require(fields)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvalsPhyloPicante <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
comMat <- localPlots(size = 100, n = 100, matrix = s, community = T)$communityTable
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
extantPhyloDis <- cophenetic(extantPhylo)
pvalsPhyloPicante[[i]] <- ses.mpd(samp = comMat, dis = extantPhyloDis, null.model = "phylogeny.pool", abundance.weighted = TRUE, runs = 1000)
}
names(pvalsPhyloPicante) <- names(outList)
#Phylogeny Pool PhylGeo
pvalsPhyloGeo <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvalsPhyloGeo[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 100,repetitions = 1000)
}
names(pvalsPhyloGeo) <- names(outList)
# Sample Pool Picante
pvalsSamplePicante <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
comMat <- localPlots(size = 100, n = 100, matrix = s, community = T)$communityTable
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
extantPhyloDis <- cophenetic(extantPhylo)
pvalsSamplePicante[[i]] <- ses.mpd(samp = comMat, dis = extantPhyloDis, null.model = "sample.pool", abundance.weighted = TRUE, runs = 1000)
}
names(pvalsSamplePicante) <- names(outList)
# Sample Pool PhylGeo
pvalsSampleGeo <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvalsSampleGeo[[i]] <- nullModelSample(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 100,repetitions = 1000)
}
names(pvalsSampleGeo) <- names(outList)
```{r pValue_matrix, echo = FALSE}
pvalsPhyloPicante <- pvalsPhyloPicante[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsPhyloPicante)){
z[i] <- median(pvalsPhyloPicante[[i]], na.rm = T)$mpd.obs.p
zSD[i] <- sd(pvalsPhyloPicante[[i]], na.rm = T)$mpd.obs.p
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Phylogeny.Pool Picante", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
```
### Phylogeny.Pool PhylGeo
```{r, echo=FALSE}
pvalsPhyloGeo <- pvalsPhyloGeo[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsPhyloGeo)){
z[i] <- median(pvalsPhyloGeo[[i]], na.rm = T)
zSD[i] <- sd(pvalsPhyloGeo[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Phylogeny.Pool PhylGeo", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
```
### Sample.Pool Picante
```{r, echo=FALSE}
pvalsSamplePicante <- pvalsSamplePicante[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsSamplePicante)){
z[i] <- median(pvalsSamplePicante[[i]], na.rm = T)$mpd.obs.p
zSD[i] <- sd(pvalsSamplePicante[[i]], na.rm = T)$mpd.obs.p
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Sample.Pool Picante", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
```
### Sample.Pool Phylgeo
```{r, echo=FALSE}
pvalsSampleGeo <- pvalsSampleGeo[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsSampleGeo)){
z[i] <- median(pvalsSampleGeo[[i]], na.rm = T)
zSD[i] <- sd(pvalsSampleGeo[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Sample.Pool PhylGeo", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
require(picante)
require(PhylGeo)
require(shape)
require(fields)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
```
```{r calculating_pvalues}
# Phylogeny Pool Picante
pvalsPhyloPicante <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
comMat <- localPlots(size = 100, n = 100, matrix = s, community = T)$communityTable
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
extantPhyloDis <- cophenetic(extantPhylo)
pvalsPhyloPicante[[i]] <- ses.mpd(samp = comMat, dis = extantPhyloDis, null.model = "phylogeny.pool", abundance.weighted = TRUE, runs = 1000)$mpd.obs.p
}
names(pvalsPhyloPicante) <- names(outList)
#Phylogeny Pool PhylGeo
pvalsPhyloGeo <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvalsPhyloGeo[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 100,repetitions = 1000)
}
names(pvalsPhyloGeo) <- names(outList)
# Sample Pool Picante
pvalsSamplePicante <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
comMat <- localPlots(size = 100, n = 100, matrix = s, community = T)$communityTable
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
extantPhyloDis <- cophenetic(extantPhylo)
pvalsSamplePicante[[i]] <- ses.mpd(samp = comMat, dis = extantPhyloDis, null.model = "sample.pool", abundance.weighted = TRUE, runs = 1000)$mpd.obs.p
}
names(pvalsSamplePicante) <- names(outList)
# Sample Pool PhylGeo
pvalsSampleGeo <- list()
for(i in 1:length(outList)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvalsSampleGeo[[i]] <- nullModelSample(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 100,repetitions = 1000)
}
names(pvalsSampleGeo) <- names(outList)
pvalsPhyloPicante <- pvalsPhyloPicante[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsPhyloPicante)){
z[i] <- median(pvalsPhyloPicante[[i]], na.rm = T)
zSD[i] <- sd(pvalsPhyloPicante[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Phylogeny.Pool Picante", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
pvalsPhyloGeo <- pvalsPhyloGeo[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsPhyloGeo)){
z[i] <- median(pvalsPhyloGeo[[i]], na.rm = T)
zSD[i] <- sd(pvalsPhyloGeo[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Phylogeny.Pool PhylGeo", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
pvalsSamplePicante <- pvalsSamplePicante[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsSamplePicante)){
z[i] <- median(pvalsSamplePicante[[i]], na.rm = T)
zSD[i] <- sd(pvalsSamplePicante[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Sample.Pool Picante", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
pvalsSampleGeo <- pvalsSampleGeo[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvalsSampleGeo)){
z[i] <- median(pvalsSampleGeo[[i]], na.rm = T)
zSD[i] <- sd(pvalsSampleGeo[[i]], na.rm = T)
}
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values Sample.Pool PhylGeo", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
0.6/0.05
12*12
144*-0.5
exp(-72)
exp(-7)
exp(-1)
library(PhylGeo)
library(PhylGeo)
testModel <- fullMod(x = 50, y = 50, dispersal = 1, runs = 3000, specRate = 1, density = F, environment = T, neutral = F, dispersalCut = 1, densityCut = 1, seed = 1500)
image(testModel$specMat)
library(PhylGeo)
detach("package:PhylGeo", unload=TRUE)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
library(picante)
library(PhylGeo)
require(picante)
require(PhylGeo)
tr <- fullMod(x = 50, y = 50, dispersal = 1, runs = 3000, specRate = 1.0, density = F, environment = T, neutral = F, dispersalCut = 2, densityCut = 1, seed = 1500)
plotSpatialPhylo(tr$specMat, drop.fossil(tr$phylogeny))
rac(tr$specMat, plot = T)
pVal <- nullModelSample(speciesMatrix = tr$specMat, phylogeny = drop.fossil(tr$phylogeny), localPlotSize = 25, numberOfPlots = 20, repetitions = 1000)
boxplot(pVal)
median(pVal)
tr$phylogeny
