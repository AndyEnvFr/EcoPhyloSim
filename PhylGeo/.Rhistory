boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
abline(h = 0.5)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "recorded phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="reconstructed phylogeny")
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "ward.D"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "recorded phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="reconstructed phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main=" recorded phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "complete"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main=" recorded phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
image(matrix(localList$local8$specOut, nrow=256, ncol = 256))
sort(table(matrix(localList$local8$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local6$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local4$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local2$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local1$specOut, nrow=256, ncol = 256)))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), clusterMethod = "complete")
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "complete")
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
speciesMatrix <- matrix(localList$local1$specOut, nrow=256, ncol=256)
traitMatrix <- matrix(localList$local1$neutralOut, nrow=256, ncol=256)
speciesTable <- table(speciesMatrix)
speciesTable
meanNeutralTraits <-numeric()
for(i in 1:length(speciesTable))
{
meanNeutralTraits[i] <- mean(traitMatrix[which(s == names(speciesTable)[i])])
}
names(meanNeutralTraits) = names(speciesTable)
meanNeutralTraits
speciesTable
length(speciesTable)
names(speciesTable)
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "ward.D")
plot(phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "ward.D") )
library(PhylGeo)
require(PhylGeo)
require(shape)
require(fields)
require(ape)
require(picante)
#loading the data
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
# SES.mntd.phylogeny.pool <- ses.mntd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(outList)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- fr2 <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
pvals
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- fr2 <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr[i] <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- fr2 <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr[i] <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
fr
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- fr2 <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr[i] <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- fr2 <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr[i] <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
warnings()
fr
fr <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr[i] <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr
fr <- fr[,-1]
colnames(fr) <- names(outList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
Cols <- colPal(16)[rank(z)]
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "reconstructed phylogeny")
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(25,3000,matrix = s, community = T)$communityTable
# SES.mntd.phylogeny.pool <- ses.mntd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(outList)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
Cols <- colPal(16)[rank(z)]
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "reconstructed phylogeny")
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
# par(mar=c(1, 1, 1, 1), xpd=FALSE)
emptyplot(main = "p-Values, MNTD, Phylogeny Pool", xlim=c(0, 1.5), ylim=c(0,1), frame.plot = T)
for(k in 1:3){#
x <- 0.2
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[j], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.5, y = y, labels = ylables[k])
text(x = -1.3, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.3, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
pvals[[♥1]]
pvals[[1]]
pvals[[2]]
pvals[[7]]
pvals[[2]]
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(25,3000,matrix = s, community = T)$communityTable
# SES.mntd.phylogeny.pool <- ses.mntd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "sample.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(outList)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
fr <- data.frame(x = rep(NA, 100))
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(outList)
Cols <- colPal(16)[rank(z)]
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "reconstructed phylogeny")
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
# par(mar=c(1, 1, 1, 1), xpd=FALSE)
emptyplot(main = "p-Values, MNTD, Phylogeny Pool", xlim=c(0, 1.5), ylim=c(0,1), frame.plot = T)
for(k in 1:3){#
x <- 0.2
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[j], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.5, y = y, labels = ylables[k])
text(x = -1.3, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.3, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
pValues
pvals
pvals[[1]]
library(PhylGeo)
library(PhylGeo)
install.packages("~/GitHub/phylosim/PhylGeo_1.0.tar.gz", repos = NULL, type = "source")
library(PhylGeo)
require(picante)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
localAbundances <- rowSums(x = comMat) # calculate sum of local abundances
metaabundance <- table(mat) # calculate abundances of species in metacommunity
names(metaabundance) <- paste("s", names(metaabundance), sep="") # set names equal to those in the local communities and the distance matrix
testMulti <- rmultinom(n = 1000, size=localAbundances[1],  prob=metaabundance) # create multinomial distributed matrix
NullDistribution = mpd(samp = t(testMulti), dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for null matrix
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
CummulativeDensityFunction = ecdf(NullDistribution) # create cumulative density function from null matrix
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
require(PhylGeo)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
load(file) # the loaded list is always called "OUT"
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
localPlots
localPlots()
library(PhylGeo)
require(picante)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
localAbundances <- rowSums(x = comMat) # calculate sum of local abundances
metaabundance <- table(mat) # calculate abundances of species in metacommunity
names(metaabundance) <- paste("s", names(metaabundance), sep="") # set names equal to those in the local communities and the distance matrix
testMulti <- rmultinom(n = 1000, size=localAbundances[1],  prob=metaabundance) # create multinomial distributed matrix
NullDistribution = mpd(samp = t(testMulti), dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for null matrix
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
CummulativeDensityFunction = ecdf(NullDistribution) # create cumulative density function from null matrix
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
localPlots()
library(PhylGeo)
nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
mean(test)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
require(PhylGeo)
require(picante)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
localAbundances <- rowSums(x = comMat) # calculate sum of local abundances
metaabundance <- table(mat) # calculate abundances of species in metacommunity
names(metaabundance) <- paste("s", names(metaabundance), sep="") # set names equal to those in the local communities and the distance matrix
testMulti <- rmultinom(n = 1000, size=localAbundances[1],  prob=metaabundance) # create multinomial distributed matrix
NullDistribution = mpd(samp = t(testMulti), dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for null matrix
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
CummulativeDensityFunction = ecdf(NullDistribution) # create cumulative density function from null matrix
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
library(PhylGeo)
require(PhylGeo)
require(picante)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
localAbundances <- rowSums(x = comMat) # calculate sum of local abundances
metaabundance <- table(mat) # calculate abundances of species in metacommunity
names(metaabundance) <- paste("s", names(metaabundance), sep="") # set names equal to those in the local communities and the distance matrix
testMulti <- rmultinom(n = 1000, size=localAbundances[1],  prob=metaabundance) # create multinomial distributed matrix
NullDistribution = mpd(samp = t(testMulti), dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for null matrix
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
CummulativeDensityFunction = ecdf(NullDistribution) # create cumulative density function from null matrix
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
library(PhylGeo)
