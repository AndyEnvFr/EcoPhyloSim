text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 3, 0), xpd=TRUE)
emptyplot(main = "p-Values", xlim=c(-1.5, 1.5), ylim=c(0.4,1.2), frame.plot = F)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 3, 0), xpd=TRUE)
emptyplot(main = "p-Values", xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 3, 0), xpd=TRUE, mai=c())
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=1)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 3, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-1)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 3, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-3)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-3)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, -1, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "over - \ndispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "under - \ndispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Mean", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "underdispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.35, labels = "underdispersed \n(clustered)", pos = 4)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(100,650,matrix = s, community = T)$communityTable
# SES.mntd.phylogeny.pool <- ses.mntd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(outList)
z <- numeric()
zSD <- numeric()
fr <- data.frame(x = rep(NA, 650))
frRecon <- data.frame(x = rep(NA, 650))
pvals <- pvals[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvals)){
z[i] <- median(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
}
# fr <- fr[,-1]
#
# frRecon <- frRecon[,-1]
#
# colnames(fr) <- names(outList)
# colnames(frRecon) <- names(outList)
# Cols <- rainbow(16)
# par(mar=c(7.1, 3.1, 2.1, 2.1), xpd=TRUE, mfrow=c(2,1))
# boxplot(fr, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "recorded phylogeny", las=2)
# abline(h = 0.5)
# boxplot(frRecon, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "reconstructed phylogeny", las=2)
# abline(h = 0.5)
# par(mfrow=c(1,1))
# # labs <- names(outList)
# # text(x = seq(1,length(outList),1),labs, y=-1,25)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(100,650,matrix = s, community = T)$communityTable
# SES.mntd.phylogeny.pool <- ses.mntd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000,abundance.weighted = TRUE)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(outList)
z <- numeric()
zSD <- numeric()
fr <- data.frame(x = rep(NA, 650))
frRecon <- data.frame(x = rep(NA, 650))
pvals <- pvals[c(1:4,5:8,13:14,9:12,15:16)]
for(i in 1:length(pvals)){
z[i] <- median(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
}
# fr <- fr[,-1]
#
# frRecon <- frRecon[,-1]
#
# colnames(fr) <- names(outList)
# colnames(frRecon) <- names(outList)
# Cols <- rainbow(16)
# par(mar=c(7.1, 3.1, 2.1, 2.1), xpd=TRUE, mfrow=c(2,1))
# boxplot(fr, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "recorded phylogeny", las=2)
# abline(h = 0.5)
# boxplot(frRecon, ylim = c(-0.1, 1.1), col = Cols, border = "grey30", main = "reconstructed phylogeny", las=2)
# abline(h = 0.5)
# par(mfrow=c(1,1))
# # labs <- names(outList)
# # text(x = seq(1,length(outList),1),labs, y=-1,25)
y <- 0.9
j <- 1
xlables <- c("Env", "Neutral", "Dens", "Both", "Both\n(Wide)", "Dens\n(Wide)")
ylables <- c("global", "local8", "local4")
ColPalet <- colorRampPalette(c("blue", "white", "red"))
Cols <- ColPalet(100)
index <- seq(0,1,0.01)
# Cols[which.max(index[index <= z[5]])]
par(mar=c(0, 2, 0, 0), xpd=TRUE)
emptyplot(xlim=c(-1.5, 1.5), ylim=c(0.4,1.15), frame.plot = F)
title("p-Values", line=-5)
for(k in 1:3){#
x <--1.0
if(k==1) a=4
else a = 6
for(i in 1:a){
filledrectangle(wx = 0.2, wy = 0.2, col = Cols[which.max(index[index <= z[j]])], mid = c(x, y), angle = 0)
text(x = x, y = y+0.05, labels = round(z[j],digits = 3))
text(x = x, y = y-0.05, labels = round(zSD[j],digits = 3))
if(k==3) text(x = x, y = 1.1, labels = xlables[i])
x <- x + 0.25
j <- j+1
#       print(j)
}
text(x = -1.4, y = y, labels = ylables[k])
text(x = -1.2, y = y+0.05, labels = "Median", cex = 0.8)
text(x = -1.2, y = y-0.05, labels = "SD",  cex = 0.8)
y <- y - 0.25
}
colorbar.plot(x = 0.7, y = 0.7, strip=seq(0,1,0.001), col=Cols, strip.length = 0.3, horizontal = F, strip.width = 0.05)
text(x = 0.8, y = 1.1, labels = "overdispersed" , pos = 4)
text(x = 0.8, y = 0.7, labels = "neutral" , pos = 4)
text(x = 0.8, y = 0.3, labels = "underdispersed \n(clustered)", pos = 4)
