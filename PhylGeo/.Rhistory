for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
}
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(0, 1.2),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
z
zSD
pvals
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.z, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.z, na.rm = T)
}
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(0, 1.2),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-5, 5),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-3, 3),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-4, 4),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(abs(pvals[[i]]$mpd.obs.z, na.rm = T))
zSD[i] <- sd(abs(pvals[[i]]$mpd.obs.z, na.rm = T))
}
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-4, 4),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
}
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-4, 4),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-0.1, 2),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-0.1, 1.5),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-0.1, 1),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
boxplot(pvals[[1]]$mpd.obs.p)
boxplot(pvals[1-5]$mpd.obs.p)
pvals[1-5]$mpd.obs.p
pvals[1-5]
boxplot(pvals[1-5][7])
pvals[1-5][7]
data.frame(x = rep(100, NA))
fr <- data.frame(x = rep(NA, 100))
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
boxplot(fr)
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
boxplot(fr)
par(mar=c(5.1, 4.1, 4.1, 5.1), xpd=TRUE)
boxplot(fr)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr)
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr)
boxplot(fr, ylim = c(-0.2, 1.5))
boxplot(fr, ylim = c(-0.2, 1.2))
boxplot(fr, ylim = c(-0.1, 1.1))
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = localList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1))
par(mar=c(5.1, 4.1, 4.1, 9.1), xpd=TRUE)
mp <- barplot(z, axes=FALSE, axisnames=FALSE, ylim=c(-0.1, 1),col=terrain.colors(length(localList)), main="pValues SES", xlab="Dispersal Distance", ylab="SES pValue", names.arg=(names(pvals)))
segments(mp, z - zSD, mp, z + zSD, lwd=2)
# Now plot the horizontal bounds for the error bars
# 1. The lower bar
segments(mp - 0.1, z - zSD, mp + 0.1, z - zSD, lwd=2)
# 2. The upper bar
segments(mp - 0.1, z + zSD, mp + 0.1, z + zSD, lwd=2)
legend(legend= names(localList),inset=c(-0.35,1),"right",  fill = terrain.colors(length(localList)), bty = "n")
par(mar=c(0, 0, 0, 0), xpd=FALSE)
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "ward.d"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1))
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "ward.D"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1))
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "ward.D2"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1))
pvals
abline(h = 0.5)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1))
abline(h = 0.5)
boxplot(fr, ylim = c(-0.1, 1.1), col = "yellow")
boxplot(fr, ylim = c(-0.1, 1.1), col = "yellow", border = "darkblue")
boxplot(fr, ylim = c(-0.1, 1.1), col = "yellow", border = "blue")
boxplot(fr, ylim = c(-0.1, 1.1), col = "blue", border = "blue")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "blue")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "darkgrey")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "darkdarkgrey")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey80")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey10")
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30")
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "average"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
fr <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
colnames(fr) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30")
pvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = localList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
pvals[[i]] <- SES.mntd.phylogeny.pool
}
names(pvals) <- names(localList)
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(pvals)){
z[i] <- mean(pvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(pvals[[i]]$mpd.obs.p, na.rm = T)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="recorded phylogeny")
abline(h = 0.5)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "recorded phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="reconstructed phylogeny")
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "ward.D"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE)
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "recorded phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main="reconstructed phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main=" recorded phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
phyloclust <- list()
par(mfrow = c(3,2))
for(i in 1:length(distMatList)){
phyloclust[[i]] <- as.phylo(hclust(distMatList[[i]], method = "complete"))
plot(phyloclust[[i]])
}
par(mfrow = c(1,1))
traitpvals <- list()
for(i in 1:length(localList)){
print(i)
s <- matrix(localList[[i]]$specOut, nrow = 256, ncol = 256)
extantPhylo <- phyloclust[[i]]
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(650,100,matrix = s, community = T)$communityTable
SES.mntd.phylogeny.pool <- ses.mpd(comMat, phy.exta, "phylogeny.pool",runs=999, iterations=1000)  #4
traitpvals[[i]] <- SES.mntd.phylogeny.pool
}
names(traitpvals) <- names(localList)
fr <- fr2 <- data.frame(x = rep(NA, 100))
colPal <- colorRampPalette(c('blue','white','red'))
z <- numeric()
zSD <- numeric()
for(i in 1:length(traitpvals)){
z[i] <- mean(traitpvals[[i]]$mpd.obs.p, na.rm = T)
zSD[i] <- sd(traitpvals[[i]]$mpd.obs.p, na.rm = T)
fr <- cbind(fr, traitpvals[[i]]$mpd.obs.p)
fr2 <- cbind(fr2, pvals[[i]]$mpd.obs.p)
}
fr <- fr[,-1]
fr2 <- fr2[,-1]
colnames(fr) <- names(localList)
colnames(fr2) <- names(localList)
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(2,1))
boxplot(fr, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main = "reconstructed phylogeny")
boxplot(fr2, ylim = c(-0.1, 1.1), col = "orange", border = "grey30", main=" recorded phylogeny")
par(mar=c(5.1, 3.1, 4.1, 3.1), xpd=TRUE, mfrow=c(1,1))
image(matrix(localList$local8$specOut, nrow=256, ncol = 256))
sort(table(matrix(localList$local8$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local6$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local4$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local2$specOut, nrow=256, ncol = 256)))
sort(table(matrix(localList$local1$specOut, nrow=256, ncol = 256)))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), clusterMethod = "complete")
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "complete")
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256))
speciesMatrix <- matrix(localList$local1$specOut, nrow=256, ncol=256)
traitMatrix <- matrix(localList$local1$neutralOut, nrow=256, ncol=256)
speciesTable <- table(speciesMatrix)
speciesTable
meanNeutralTraits <-numeric()
for(i in 1:length(speciesTable))
{
meanNeutralTraits[i] <- mean(traitMatrix[which(s == names(speciesTable)[i])])
}
names(meanNeutralTraits) = names(speciesTable)
meanNeutralTraits
speciesTable
length(speciesTable)
names(speciesTable)
library(PhylGeo)
phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "ward.D")
plot(phyloReconstruct(matrix(localList$local1$specOut, nrow=256, ncol=256),matrix(localList$local1$neutralOut, nrow=256, ncol=256), "ward.D") )
library(PhylGeo)
