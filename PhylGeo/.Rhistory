extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
boxplot(test)
mean(test, na.rm = T)
hist(test)
require(PhylGeo)
require(picante)
fileName <- "globalNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
NullDistribution = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
NullDistribution[which(is.na(NullDistribution))] <- 0
CummulativeDensityFunction = ecdf(NullDistribution) # create cumulative density function from null matrix
#########################################
fileName <- "local4Neutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
fileName <- "local8Neutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
fileName <- "local8DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
fileName <- "globalDensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
fileName <- "globalEnv"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
fileName <- "globalBothNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
fileName <- "local4BothNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
fileName <- "local4DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
fileName <- "local8DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
fileName <- "local8BothNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue)
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 650, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test)
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 650, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
fileName <- "local8Env"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 650, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
fileName <- "local8DensWide"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 650, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
source('C:/Users/Paul/Desktop/Data/nullModel.R', echo=TRUE)
fileName <- "localNeutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
fileName <- "local4Neutral"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 100, n = 650, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 650, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
ses <- ses.mpd(samp = comMat, dis = extantPhyloCophen, null.model = "taxa.labels", abundance.weighted = T, runs = 1000)
par(mfrow=c(1,2))
boxplot(ses$mpd.obs.p, ylim=c(0,1))
mean(ses$mpd.obs.p, na.rm = T)
hist(ses$mpd.obs.p)
par(mfrow=c(1,1))
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 25, n = 2000, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 25, numberOfPlots = 2000, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
ses <- ses.mpd(samp = comMat, dis = extantPhyloCophen, null.model = "taxa.labels", abundance.weighted = T, runs = 1000)
par(mfrow=c(1,2))
boxplot(ses$mpd.obs.p, ylim=c(0,1))
mean(ses$mpd.obs.p, na.rm = T)
hist(ses$mpd.obs.p)
par(mfrow=c(1,1))
fileName <- "localDensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 25, n = 2000, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
fileName <- "local4DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 25, n = 2000, matrix = mat, community = T)$communityTable # create community matrix from local communities (requires PhylGeo)
observedMPD = mpd(samp = comMat, dis = extantPhyloCophen, abundance.weighted = T) # calculate mpd for "real matrix
observedMPD[which(is.na(observedMPD))] <- 0
pValue = CummulativeDensityFunction(observedMPD) # use  cumulative density function on "real" mpd
par(mfrow=c(1,2))
boxplot(pValue, ylim=c(0,1))
mean(pValue, na.rm = T)
hist(pValue)
par(mfrow=c(1,1))
plotSpatialPhylo(landscape = mat, phylogeny = extantPhylo, plot = "both")
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 25, numberOfPlots = 2000, repetitions = 1000)
par(mfrow=c(1,2))
boxplot(test, ylim=c(0,1))
mean(test, na.rm = T)
hist(test)
par(mfrow=c(1,1))
ses <- ses.mpd(samp = comMat, dis = extantPhyloCophen, null.model = "taxa.labels", abundance.weighted = T, runs = 1000)
par(mfrow=c(1,2))
boxplot(ses$mpd.obs.p, ylim=c(0,1))
mean(ses$mpd.obs.p, na.rm = T)
hist(ses$mpd.obs.p)
par(mfrow=c(1,1))
require(picante)
require(PhylGeo)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
phy.exta <- cophenetic(extantPhylo)
comMat <- localPlots(100,650,matrix = s, community = T)$communityTable
pvals[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 650,repetitions = 5000)
}
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 25, numberOfPlots = 2000, repetitions = 1000)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
fileName <- "local4DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
comMat <- localPlots(size = 25, n = 2000, matrix = mat, community = T)$communityTable # create comm
fileName <- "local4DensNN"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
fileName <- "globalEnv"  # Put the filename here (without extension)
file <- paste("C:/Users/Paul/Desktop/Data/",fileName, ".rdata", collapse="", sep="") # put the path here
load(file) # the loaded list is always called "OUT"
mat <- matrix(OUT$specOut, ncol=256, nrow=256) # turn vector into matrix
phylo <- read.tree(text = OUT$phyloOut) # read phylogeny (requires picante)
extantPhylo <- drop.fossil(phylo) # drop extinct species (requires picante)
extantPhyloCophen <- cophenetic(extantPhylo) # create distance matrix from phylogeny (requires picante)
test <- nullModel(speciesMatrix = mat, phylogeny = extantPhylo, localPlotSize = 100, numberOfPlots = 500, repetitions = 1000)
require(picante)
require(PhylGeo)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
comMat <- localPlots(100,650,matrix = s, community = T)$communityTable
pvals[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 650,repetitions = 5000)
}
names(pvals) <- names(outList)
comMat
rowSum(comMat)
rowSums(comMat)
range(rowSums(comMat))
rowSums(comMat)[1]
rowSums(comMat)[2]
rowSums(comMat)[3]
```{r}
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
comMat <- localPlots(100,650,matrix = s, community = T)$communityTable
pvals[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 650,repetitions = 1000)
}
require(picante)
require(PhylGeo)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
length(outList)
s <- matrix(outList[[2]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[2]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
plot(extantPhylo)
nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 650,repetitions = 1000)
s
str(s)
type(s)
library(PhylGeo)
require(picante)
require(PhylGeo)
files = c("globalEnv", "globalNeutral", "globalDensNN", "globalBothNN","local8Env", "local8Neutral", "local8DensNN", "local8BothNN", "local4Env", "local4Neutral", "local4DensNN", "local4BothNN","local8BothWide","local8DensWide", "local4BothWide","local4DensWide")
outList <- list()
for(i in 1:length(files)){
file <- paste("C:/Users/Paul/Desktop/Data/",files[i], ".rdata", collapse="", sep="")
load(file)
outList[[i]] <- OUT
}
names(outList) <- files
rm(file, files, i, OUT)
pvals <- list()
for(i in 1:length(outList)){
print(i)
s <- matrix(outList[[2]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[2]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
pvals[[i]] <- nullModel(speciesMatrix = s, localPlotSize = 100, phylogeny = extantPhylo, numberOfPlots = 650,repetitions = 1000)
}
names(pvals) <- names(outList)
for(i in 1:length(pvals)){
s <- matrix(outList[[i]]$specOut, nrow = 256, ncol = 256)
phyl <- read.tree(text = outList[[i]]$phyloOut)
extantPhylo <- drop.fossil(phy = phyl)
plotSpatialPhylo(landscape = s, phylogeny = extantPhylo, plot = "both")
}
boxplot(pvals, las=2, ylim=c(0,1))
lapply(X = pvals, FUN = mean)
par(oma = c(2, 0, 0, 0))
boxplot(pvals, las=2, ylim=c(0,1), main="p-Values MPD")
text(x = seq(1,length(pvals),1), labels = lapply(pvals, mean))
lapply(pvals, mean)
vapply(pvals, mean)
sapply(pvals, mean)
text(x = seq(1,length(pvals),1), labels = sapply(pvals, mean))
seq(1,length(pvals),1)
text(x = 1, labels = sapply(pvals, mean))
text(x = 10, labels = sapply(pvals, mean))
text(x = 100, labels = sapply(pvals, mean))
text(x = 10000, labels = sapply(pvals, mean))
text(x = names(pvals), labels = sapply(pvals, mean))
a <- boxplot(pvals, las=2, ylim=c(0,1), main="p-Values MPD")
a
a <- boxplot(pvals, las=2, ylim=c(0,1), main="p-Values MPD")
text(x = seq(1,16,1), labels = sapply(pvals, mean))
a <- boxplot(pvals, las=2, ylim=c(0,1), main="p-Values MPD")
text(x = seq(10,16,1), labels = sapply(pvals, mean))
a <- boxplot(pvals, las=2, ylim=c(0,1), main="p-Values MPD")
text(x = seq(5,10,1), labels = sapply(pvals, mean))
a <- boxplot(pvals, las=2, ylim=c(0,1.2), main="p-Values MPD")
text(x = seq(1,16,1), labels = sapply(pvals, mean), y = 1.1)
a <- boxplot(pvals, las=2, ylim=c(0,1.2), main="p-Values MPD")
text(x = seq(1,16,1), labels = round(sapply(pvals, mean),2), y = 1.1)
par(oma = c(3, 0, 0, 0))
a <- boxplot(pvals, las=2, ylim=c(0,1.2), main="p-Values MPD")
par(oma = c(4, 0, 0, 0))
a <- boxplot(pvals, las=2, ylim=c(0,1.1), main="p-Values MPD")
text(x = seq(1,16,1), labels = round(sapply(pvals, mean),2), y = 1.1)
par(oma = c(4.5, 0, 0, 0))
a <- boxplot(pvals, las=2, ylim=c(0,1.1), main="p-Values MPD")
text(x = seq(1,16,1), labels = round(sapply(pvals, mean),2), y = 1.1)
