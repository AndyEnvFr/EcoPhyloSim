\documentclass{article}

\author{Florian Hartig}
\title{Introduction to the phylosim package \\ Simulating species community assembly processes}

\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle


\section{Introduction}
The question whether or to which degree on can infer community assembly processes from their resulting spatial and phylogenetic patterns is of central importance in ecology. It is these processes that create and maintain local assemblages.\\
Currently there are many different explanations as to how species communities are shaped based on the emerging spatial or phylogenetic patterns. 
The phylosim package represents an expansion of previous models by combining these informations.\\
The simulation can include different mechanisms of community assembly such as dispersal limitation, environmental preferences and local competition, whereas the outcome consists of phylogenetic and spatial patterns. The mechanisms can be activated seperately or in combination. This allows the user to identify biogeographic or phylogenetic patterns exclusively correlated with a certain mechanism or combination of mechanisms.\\
Among the central model the package comprises a set of functions to illustrate and analyze the results.



\section{The model}
\subsection{The grid}
The basis for the simualtion is a grid consiting of spatially discrete cells.
Each cell is inhabited by one individual at any time. Additionally an environmental gradient can be included. To avoid boundary effects the boundaries of the grid are warped.

\subsection{The indivuduals}
TODO Formulas
Each individual belongs to a species. The properties of the individual are represented in two traits ranging between zero and one.
The competition trait represents the individual's preferences apart from the environment. The more similar the traits of two individuals, the stronger they compete with each other.\\
The environmental trait simulates the individual's interaction with the environment. 
It is defined as the mean of a Gaussian Distribution with $\sigma$ set to 0.047. This represents a niche width covering ten percent of the total space of the
respective resource (approch see: Ackermann and Doebeli, 2004).\\
Apart from the individual's traits each species has trait values. These traits are not independent but defined as the mean of the respective traits of all individuals of the species. 
The species traits serve as an attractor in the individual trait evolution proces.
Further, each species contains information about its parent species and the species that emerged from it. 

\subsection{Processes}
The simulation runs over a defined number of generations. 
In each generation the simulation consists of three consecutive steps.\\
First the individuals reproduce and spread over the grid. All cells are sequentially chosen at random and the individuals are replaced by the offspring of other individuals.\\
The individual which produces its offspring and disperses into an empty cell is chosen by an multinomial distribution which consists of all cells within the dispersion kernel.
The dispersion kernel represents the distance to the cell to be populated and is defined as:
TODO Formula
Wd represents the weight weight derived from the euclidean distance (delta s) between the
cell to be populated and the potential parent. An increasing distance to the cell leads to an exponential decline in reproductive fitness. The dispersal kernel can be cut at a certain radius.\\
The density dependence is based on the competition traits of the indivuduals. The closer the values of the competition traits of two individuals, the stronger they compete. Numerically it can be written as the sum of all absolute competition trait differences in a certain area around the individual. The normalized value is now included in the multinomial distribution as follows:
TODO Formula
\\
The second step in the simulation of one generation is the trait evolution. This step represents genetic recombination in the real world.
The trait is modelled as the mean of a Gaussian Distribution (see above). In each generation this value is slightly changed. The new trait is influenced by the parent's value, a weighted random value and the attraction of the specie's value. The parent value has the highest influence whereas the other two traits have only slight influence.
The trait values during trait evolution are calculated as follows:
TODO Formula
\\
The last step in a generation is speciation. Here it describes the introduction of a new species via point mutations. These mutations can either become more abundand or go extinct (Hubbell, 1997).The frequency of these events is controlled by the speciation rate in the parameter settings. Each generation a number of new species is introduced in the system replacing randomly chosen individuals. The traits of these individuals are calculated from the parent's traits and a randomly generated value as follows:
TODO Formula
\\


\section{Basic functionality}
The following section descibes how the model is applied and shows some of the most important funktions to illustrate and analyze the results of the simulations.

\subsection{Loading the package}

Loading the package via

<<>>=
library(PhylGeo)
@


\subsection{Run the model}
Running the model consists of two consecutive steps. First a list of parameters is generated based on the users settings.\\
In the following example an area of 50*50 cells provides the basis for one simulation with 1000 generations. Also the results after 500 generations will be stored in the output. \\
The dispersal is set to global, meaning each individual could reproduce in every cell
of the grid. Further, the density as well as the environment have an influence on the 
individuals.\\
The package can run three types of models. The default model, a Leipzig model and
a neutral model purely written in R. The last one is to be seen only for test and teaching purpose. To be used in practice it is far too slow.

For further explanations and more settings see:
<<>>=
?createCompletePar
@

<<>>=
par <- createCompletePar(x = 50, y = 50, dispersal = "global" , runs = c(500,1000), density = 1, environment = 0.5, specRate = 1, type="base")
@



The list of parameters is now being used to exectute the simulation:
<<>>=
simu <- runSimulation(par)
@


The output is saved as an object of type "Phylosim".
This objet contains the species matrix, the trait matrix, the environmental matrix, the competition matrix and the neutral matrix as well as the phlogeny for each generation as specified by the runs argument in the parameter settings (in this example after 500 and 1000 generations). Further the parameter settings of the simulation are included in the Phylosim object.


<<>>=
str(simu)
@



\subsection{Plots and summary statistics}
The phylosim package contaions  multiple functions to visualize the results of the simulation.
The plotSpatialPhylo function can plot the resulting landscape, phylogeny and the evolved traits.

<<fig=TRUE>>=
plotSpatialPhylo(simu, plot = "both", plotTraits = T, which.simulation = NULL)
@

The package contains two functions to analyze the spatial patterns of the results.
The species-area curve (SAC) and the rank-abundace curve (RAC).
The SAC shows the accumulated species richness as a function of the plot size. 
A positively bent curve indicates clustering of a species community. An increase in plot size leads to an increase in specis richness. A negatively bent curve indicates a more neutral distribution of species within the cmmunity.\\
RACs display the amount of equally abundand species that the community can support. A linear curve indicates a less stable or neutral community supporting only a few highly abundand species, whereas an S-shaped curve indicates a more stable community. In the latter case several species of the same abundance can be supported.\\

Here the results are shown for the same simulation after 500 and 1000 runs.


<<fig=TRUE>>=
par(mfrow = c(2,2),mar=c(1.5, 3, 3, 0.5))
rac(simu[[1]]$specMat)
sac(simu[[1]]$specMat)
rac(simu[[2]]$specMat)
sac(simu[[2]]$specMat)
@


Further it is possible to calculate the species richness of the results. As before the result is calculated for the simulation after 500 and 1000 time steps.

<<>>=

specRich(simu[[1]]$specMat)
specRich(simu[[2]]$specMat)
@

TODO Reference
To compare these values the package comprises a function to calculate the expected species richness based on the approach of Hubbel. For this example the expected species richness in 
the equilibrium state would be:
<<>>=
es(specRate=1, dimensions=50)
@

It is possible to create subplots from a community landscape.
Here 4 subplots are produced. Besides the subplots community matrix with plots in rows and species in collumns can be returned.
<<>>=
locals<-localPlots(size=20, 4, matrix=simu[[2]]$specMat, community=T)
@

<<>>=
par(mfrow=c(2,2))
for(i in 1:4){
image(locals$subPlots[[i]])
}
@

<<>>=
locals$communityTable
@

\section{Other models}

\subsection{Neutral model}
The package contains also a purely neutral model written in R. This model is to be seen only for test and teaching purpose. To be used in practice it is far too slow.
The model can be run with:

<<>>=
metaCom <- NeutralMod(dim=50, specRate=2, seed=1500, runs=1500)
@
The output consists of a single matrix containing only the species distribution.


<<fig=TRUE>>=
image(metaCom)
@

Nonetheless, some of the functions to analyze the results can be applied. For
example:
<<fig=TRUE>>=
rac(metaCom, plot="line")
@


\subsection{Null Model}



<<>>=



library(PhylGeo)

par <- createCompletePar(x = 50, y = 50, dispersal = 1, runs = c(500,1000), density = 1, environment = 0.5, specRate = 1)

system.time(simu <- runSimulation(par))

plotSpatialPhylo(simu, plot = "both")

plotTraitDistribution(simu)


@




\end{document}