% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametersXML.R
\name{setLeipzigParametersXML}
\alias{setLeipzigParametersXML}
\title{Set Model parameters (Leipzig)}
\usage{
setLeipzigParametersXML(scenarios, x, y, runs, dispersal, nSpec, specRate,
  density, densityStrength, location, fileName)
}
\arguments{
\item{scenarios}{Character vector containing the names of the scenarios to be run}

\item{x}{Dimension of the model landscape in x-direction}

\item{y}{Dimension of the model landscape in y-direction}

\item{runs}{Number of generations the model runs over}

\item{dispersal}{1 = Global dispersal, 2 = Nearest neighbor dispersal}

\item{nSpec}{Number of initial Species in the model landscape}

\item{specRate}{Numerical, the number of species introduced into the community during each generation}

\item{density}{Logical, determining whether or not density dependence influences the model}

\item{densityStrength}{Numerical, (0.0 - 1.0) determining the strength of the density dependence}

\item{location}{A character vector specifing the folder to save the .xml file in (eg. "C:/parametersR/"). The "/" at the end is vital.}

\item{fileName}{A character vector specifing the name of the xml file (eg. "myParameters.xml")}
}
\value{
Creates a .xml file at the specified location
}
\description{
Creates a .xml file of the desired model parameters to be loaded into the model.
}
\examples{
# Define parameter values
scenarios = c("globalDens", "globalNoDens", 
              "localDens", "localNoDens")
x = rep(50,4)
y = rep(50,4)
runs = rep(3000,4)
dispersal = c(1,1,2,2)
nSpec = rep(1,4)
specRate = rep(2,4)
density = c(T,F,T,F)
densityStrength =  rep(0.4,4)
path <- "C:/"
filename <- "test.xml"

# Set parameters for the model 
setLeipzigParametersXML(scenarios = scenarios, x = x, y = y, runs = runs, 
                dispersal = dispersal, nSpec = nSpec, 
                specRate = specRate, 
                density = density, densityStrength = densityStrength, 
                location = path,
                fileName = filename)
                
# Display model parameters in data frame

dat <- paste(path, filename, collapse = "", sep = "")
parameters <- getParametersXML(dat)
parameters
}

