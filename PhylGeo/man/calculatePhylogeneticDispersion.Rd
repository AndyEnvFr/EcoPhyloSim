% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/phylogeneticDispersion.R
\name{calculatePhylogeneticDispersion}
\alias{calculatePhylogeneticDispersion}
\title{Null Model Batch Extension}
\usage{
calculatePhylogeneticDispersion(simu, plotlengths = 10, plots = 200,
  replicates = 500, types = "PhylMeta", fun = "mpd", reduce = T,
  which.simulation = NULL)
}
\arguments{
\item{simu}{A list of Phylosim objects}

\item{plotlengths}{Integer, size of the sample plots}

\item{plots}{Integer, number of sample plots}

\item{replicates}{Integer, number of replicate}

\item{types}{String, determines which null model should be created. Possible inputs are "PhylMeta" (default), "PhylSample", "PhylPool", "SamplePool" (see details).}

\item{fun}{String, determines which function should be used to calculate the phylogenetic diversity in the sample plot. Possible inputs are "mpd" or "pd" (see details).}

\item{which.simulation}{Integer, determines which result should be used. This argument is only usefull if interim steps are saved in the Phylosim object. By default (NULL), the end result is used.}
}
\value{
A numeric vector with pValues for each plot in the observed metacommunity
}
\description{
Generates a null models for a list of Phylosim objects as created by \code{\link{runSimulationBatch}} and compares the observed results against.
}
\details{
In the types argument "PhylMeta" is equivalent to \code{\link{nullModel}} with abundance = FALSE, "PhylSample" is equivalent to the same function with abundance = TRUE, wheras the two other option use \code{\link[picante]{ses.mpd}}. "PhylPool" uses the argument null.model = "phylogeny.pool", "SamplePool" is setting null.model to "sample.pool". \cr\cr The fun argument is only used if types="PhylSample". For more information see \code{\link{nullModel}}.
}
\examples{
## Create a set of parameters
par1 <- createCompletePar(x = 50, y = 50, dispersal = 0 , runs = c(500,1000),
        density = 0, environment = 0.5, specRate = 1)
par2 <- createCompletePar(x = 50, y = 50, dispersal = 0 , runs = c(500,1000),
        density = 1, environment = 0.5, specRate = 1)

## Merge the parameter sets.
par <- list(par1,par2)

## Run the model
simu <- runSimulationBatch(par, parallel = "auto")

## Calculate null model and compare the observed results against
pValues <- calculatePhylogeneticDispersion(simu, plotlength=20, plots=20, replicates=20, types="PhylMeta")

## Plot the results
plotPhylogeneticDispersion(pValues)
}

