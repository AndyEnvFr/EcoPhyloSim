% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/parCreator.R
\name{createCompletePar}
\alias{createCompletePar}
\title{Parameter Generator}
\usage{
createCompletePar(x = 50, y = 50, dispersal = "global", runs = 100,
  specRate = 1, density = 0, environment = 0,
  fitnessActsOn = "mortality", fitnessBaseMortalityRatio = 10,
  densityCut = 1, seed = NULL, type = "base", modes = NULL,
  scenario = NULL)
}
\arguments{
\item{x}{Integer, Dimension of the model landscape in x-direction}

\item{y}{Integer, Dimension of the model landscape in y-direction}

\item{dispersal}{Integer. Type 0 or "global" for global dispersion. For local dispersion all integers >=1 set the dispersal distance.}

\item{runs}{Integer, Number of generations or sequence of generations the model runs over (see Details).}

\item{specRate}{Integer, Number of Individuals introduced to the community in each generation}

\item{density}{Float, determining whether or how strong the density dependence influences the model. By default (density=0) there is no density dependence. The higher the value of the parameter, the stronger is the density dependence.}

\item{environment}{Float, determining whether or how strong the environment influences the model.  By default (environment=0) there is no influence of the environment. The higher the value of the parameter, the stronger is the influence of the environment.}

\item{fitnessActsOn}{Character, determining how the fitness influences the individuals. Possible inputs are "mortality" (default), "reproduction" or "both"}

\item{fitnessBaseMortalityRatio}{Integer, determines the fitness based mortality ratio}

\item{densityCut}{Integer, defines the effective range of the competition (ignored if density = FALSE)}

\item{seed}{numerical, sets the random seed}

\item{type}{Character, determining which model should be used. "base" is running the default model. Other possibilities are "Leipzig" and "Rneutral" which will run a neutral model purely in R.}
}
\value{
A List with parameters
}
\description{
Function to create a list of parameters for biogeographical simulations with \code{\link{runSimulation}} or \code{\link{runSimulationBatch}}
}
\details{
If runs is a sequence of generations the intermediate and end results are saved in the output of \code{runSimulation}. \cr\cr If type = "Rneutral" the model will run entirely in R. This model is to be seen only for test and teaching purpose. To be used in practice it is far too slow. Also the output is reduced. Only the species landscape and the parameter settings will be displayed in the output.
}
\examples{
## Define a parameter set
par <- createCompletePar(x = 50, y = 50, dispersal = F , runs = c(500,1000),
        density = T, environment = 0.5, specRate = 1)

## Run the model
simu <- runSimulation(par)
}

