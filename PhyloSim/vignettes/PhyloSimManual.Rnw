\documentclass [a4paper]{tufte-book}
\usepackage{color}
\usepackage{xcolor}
\usepackage{framed}
\usepackage{listings}
\usepackage{booktabs}
\usepackage{graphicx}

\usepackage{multicol}              
\usepackage{multirow}
\usepackage{booktabs}
%\usepackage{natbib} 

\usepackage[innerrightmargin = 0.7cm, innerleftmargin = 0.3cm]{mdframed}
\usepackage{mdwlist}

\usepackage[]{hyperref}
\definecolor{darkblue}{rgb}{0,0,.5}
\hypersetup{colorlinks=true, breaklinks=true, linkcolor=darkblue, menucolor=darkblue, urlcolor=blue, citecolor=darkblue}

\usepackage[toc,page]{appendix}


\setcounter{secnumdepth}{1}
\setcounter{tocdepth}{1}

\lstset{ % settings for listings needs to be be changed to R sytanx 
language=R,
breaklines = true,
columns=fullflexible,
breakautoindent = false,
%basicstyle=\listingsfont, 
basicstyle=\ttfamily \scriptsize,
keywordstyle=\color{black},                          
identifierstyle=\color{black},
commentstyle=\color{gray},
xleftmargin=3.4pt,
xrightmargin=3.4pt,
numbers=none,
literate={*}{{\char42}}1
         {-}{{\char45}}1
         {\ }{{\copyablespace}}1
}
% http://www.monperrus.net/martin/copy-pastable-listings-in-pdf-from-latex
\usepackage[space=true]{accsupp}
% requires the latest version of package accsupp
\newcommand{\copyablespace}{
    \BeginAccSupp{method=hex,unicode,ActualText=00A0}
\ %
    \EndAccSupp{}
}


%\VignetteIndexEntry{PhyloSim}
%\VignetteEngine{knitr::knitr}

<<setup, cache=FALSE, include=FALSE>>=
library(knitr)
opts_knit$set(tidy = T, fig=TRUE, fig.height = 4, fig.width=4, fig.align='center')
render_listings()
@


\newsavebox{\titleimage}
\savebox{\titleimage}{\includegraphics[width = 12cm]{PlotSpatial}}

\title[The PhyloSim R Package]{%
  \setlength{\parindent}{0pt}%
  The \par PhyloSim R Package \par \vspace{2cm} 
  \hspace{1cm}  \usebox{\titleimage}}
\author{}

\begin{document}
\SweaveOpts{concordance=TRUE}
%\SweaveOpts{concordance=TRUE}
\let\cleardoublepage\clearpage % No empty pages between chapters
%\includegraphics[width=10cm]{PlotSpatial}  
\maketitle


\thispagestyle{empty}
\null

\begin{fullwidth}

Tutorial for the PhyloSim package. Comments and contact: \href{https://florianhartig.wordpress.com/}{Florian Hartig} / University of Freiburg / Germany.


\paragraph{Warning for the user}: consider this package to be in a beta-stage. 

\paragraph{To obtain the package:} The package is not officially realeased yet. You can install by typing the following code in R. This code contains a private token - please do not pass it on!

<<eval = F>>=
# install.packages(c("devtools","Rcpp")) # I case you don't have them installed
library(devtools)
library(Rcpp)

install_url("https://dl.dropboxusercontent.com/s/zkdof0b5b523qxt/PhyloSim_0.3.tar.gz")

?PhyloSim
browseVignettes("PhyloSim")
@

\paragraph{To cite the package:} use the citation information provided with the package

<<>>=
citation('PhyloSim')
@






\vfill

This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.

\end{fullwidth}

\newpage

\tableofcontents



\chapter{Model description and running the model}


\section{Overview}

The PhyloSim package is a modelling environment for neutral and non-neutral biogeographic simulations. It generates a) Spatial distribution and diversity metrics b) phylogeny and c) traits from four basic processes: i) dispersal, ii) (adaptive) envirnomental preferences, iii) (adaptive) competitive traits, and iv) speciation in a stochastic simulation. 

The package permits to choose between a number of options for each of these processes, and provides function for analyzing the results, including standard biogeographic and phylgenetic summaries such as species-area curves, rank-abundance curves or phylogentic balance and diversity. 

\begin{figure}[h]
  \centering
  \includegraphics[width=10cm]{PlotSpatial} % without file extension
	\caption{The basic output of the PhyloSim simulation: spatial distribution, phylogeny and traits in a biogeographic region}\label{fig: phylosimoutput}
\end{figure} 

\section{State variables}

\paragraph{The grid:} The simulation runs on a spatially discrete grid. Each cell is occupied by one individual at any time. Additionally an environmental gradient can be included. To avoid boundary effects the boundaries of the grid are warped.

\paragraph{Indivuduals:} Each individual has three traits: an environmental trait, a competition trait, and a neutral trait. The properties of these traits are described in more detail in section~\ref{sec: processes}. 

\paragraph{Species and phylogeny:} Each individual belongs to a species. Species properties are described by the mean of the respective traits of all individuals of the species. The species traits serve as an attractor in the individual trait evolution proces. Further, each species contains information about its parent species and the species that emerged from it, which gives rise to the overall phylogeny. 

\section{Ecological processes}\label{sec: processes}

The simulation runs over a defined number of generations. In each generation, for each individual, the following ecological processes occurr:

\paragraph{1. Mortality / reproduction} If an individual dies,\marginnote{In the base version, individuals have identical mortalities of one per time step. However, this can be modified towards fitness-dependent mortality rates} it is replaced by a surrounding individual. What surrounding means depends on the dispersal kernel that is chosen. Dispersal can be either global, or it may occurr with an exponential kernel, which creates a weighting $w_d$ according to 
\begin{equation}
w_d = exp{-\frac{d}{\delta}}
\end{equation}

with a typical dispersal distance $\delta$ that can be set by the user. To increase the computational speed, there is a dispersal cutoff at $2 \delta$, meaning that individuals disperse only in a distance of $2 \delta$

\paragraph{2. Evolution} The second step in the simulation of one generation is the trait evolution. Trait evolution is modelled by a small gaussian random variable that is added on top of the parental trait values. Additional to the random step, a directed attraction towards the species' mean value is implemented
\begin{equation}
newtrait = (1-w_s \cdot p) + (w_s \cdot s) + (w_r \cdot r)
\end{equation}

\paragraph{3. Fitness calculation} After reproduction, the new individual will calculate it's fitness according to its competition and environmental traits. For example, the closer the values of the competition traits in the surrounding of an individual, the stronger its fitness is reduced. Numerically it can be written as the sum of all absolute competition trait differences in a certain area around the individual
\begin{equation}
r_i = \frac{\sum_{j=1}^{n}{\parallel(c_i-c_j)}\parallel}{n}
\end{equation}


\section{Speciation mechanisms}\label{sec: speciation}

After all individuals have reproduced according to 1-3, speciation occurs. The default speciation mechanism is point speciation. Their frequency of these events is controlled by the speciation rate in the parameter settings. Each generation a number of new species is introduced in the system replacing randomly chosen individuals. The traits of these individuals are calculated from the parent's traits and a randomly generated value as follows:

\begin{equation}
newtrait = (w_p \cdot p) + (w_r \cdot r)
\end{equation}

There are several other speciation mechanisms implemented in the model:

\begin{itemize}
\item Point Mutation: A randomly chosen individual becomes a new species
\item Fission Type 1:  A species is randomly chosen and every second indiviual of the species becomes part of a new species.
\item Fission Type 2: A species is randomly chosen and geographically split in two parts. Whereas one part evolves tw a new species, the other part is not affected.
\item Protracted Speciation: Based on \cite{rosindell2010} species undergoes an 'incipient' stage before becomming a new species.
\item Red Queen: Based on \cite{odwyer2014} New species have advantages over old species due to their novelty alone. The effect vanishes over time.
\end{itemize}

\section{Running the model in R}

The first thing to do is obviously loading the package:

<<message=FALSE>>=
library(PhyloSim)
@

Running the model consists of two consecutive steps. First a list of parameters is generated based on the users settings. 


<<>>=
par <- createCompletePar(x = 50, y = 50, dispersal = "global" , runs = c(500,1000), density = 1, environment = 0.5, specRate = 1, type="base")
@

In this example, an area of 50*50 cells provides the basis for one simulation with outputs recorded after 500 and 1000 generations. Also the results after 500 generations will be stored in the output. The dispersal is set to global, meaning each individual could reproduce in every cell of the grid. Further, the density as well as the environment have an influence on the individuals. For further explanations and more settings see:

<<eval=FALSE>>=
?createCompletePar
@

The list of parameters is now being used to execute the simulation

<<results='hide'>>=
simu <- runSimulation(par)
@

The output is saved as an object of type "Phylosim". Each Phylosim object contains two lists, \$Output and \$Model. All model results are saved in the Output list. 

In this example, the output consists of two results, the simulation after 500 and 1000 generations. They contain the spatial species matrix, the (environmental) trait matrix, the environmental matrix (representing the environment), the competition matrix and the neutral matrix as well as the phlogeny in two formats.

To acces them, the easiest way is to use indices
<<>>=
Output1 <- simu$Output[[1]]
str(Output1)
@

The simulation settings are saved in the model object. 

<<>>=
str(simu$Model)
@

The Phylosim object serves as the basis of all further analysis. It can directly be passed to all other funktions. If the Phylsim object contains multiple results, they can be accessed by the which.result argument in most functions. By default, the last result is used.

Often, users will want to run several simulations with different or equal parameters. For this purpose, the runSimulationBatch function allows to run a list of parameter combinations. The function can make use of parallel computing and returns an object of class PhylosimList, which is essentially a list of phylosim classes. In the following example, two slightly different parameter sets are created and processed using parallel computing on two cores.

<<results='hide'>>=
par1 <- createCompletePar(x = 50, y = 50, dispersal = "global", runs = 1000, density = 1, environment = 0.5, specRate = 1, type="base")

par2 <- createCompletePar(x = 50, y = 50, dispersal = "global", runs = 1000, density = 1, environment = 2, specRate = 1, type="base")

parmBatch <- list(par1, par2)

simuBatch <- runSimulationBatch(parmBatch, parallel = 2)
@

The simuBatch object contains two Phylosim objects saved in a list. You can easily access them seperately by indexing. For example:

<<>>=
simu1 <- simuBatch[[1]]
@


A summary of the basic classes and functions to run simulations is provided in Fig.~\ref{fig: run}.

\begin{figure}[h]
  \centering
  \includegraphics[width=10cm]{runsimulation} % without file extension
  \caption{Overview about the basic model functions in the PhyloSim package. Functions are represented by bubbles, objects by circles. Objects of the class PhylosimList can be indexed if a single Phylosim object is needed.}\label{fig: run}
\end{figure} 


\chapter{Plots and summary statistics}

After the description of the simulation environment in the previous chapter, the present explains plots and summary statistics that can be created from the PhyloSim and PhyloSimList. 

\section{Plot Functions}

The phylosim package contaions multiple functions to visualize the results of the simulation, which are visualized in Fig.~\ref{fig: plots} at the end of this chapter.

\paragraph{plotSpatialPhylo:} The easiest way to get an overview of the results of one simulation is the plotSpatialPhylo function, which is also the default plot function for a phylosim object:

<<fig.cap = "The plotSpatialPhylo plot consist of three different figures, a phylogeny that shows the evolutionary history of the species, a trait plot that shows the traits values for each of the species (coded by size), and the spatial distribution of individuals, with colors matching the colors in the phylogeny. Which of these figures are plotted can be triggered with the arguments *plot* and *plotTraits* (see help)">>=

plotSpatialPhylo(simu, plot = "both", plotTraits = T, which.result = NULL)
@


\paragraph{Species-area curve (SAC):} The SAC shows the accumulated species richness as a function of area. It is calculated by creating plots of different sizes in the meta-community

\begin{center}
<< results='hide', out.width='6cm', out.height='6cm', fig.show='hold', fig.cap="Shows the species richness in dependency to the plotsize of a local community. A positively bent curve indicates clustering of a species community. An increase in plot size leads to an increase in specis richness. A negatively bent curve indicates a more neutral distribution of species within the community.">>=
sac(simu, which.result = NULL)
@
\end{center}


\paragraph{Rank-abundace curve (RAC):} The rank-abundance curve shows the abundance of each species within the meta-community

\begin{center}
<< results='hide', out.width='6cm', out.height='6cm', fig.show='hold', fig.cap="Shows the rank-abundance curve (RAC). For that, each species is given a rank according to its abundance (highest abundance = rank 1). Then the abundance is plotted in dependency to the species' rank. RACs display the amount of equally abundand species that the community can support. A linear curve indicates a less stable or neutral community supporting only a few highly abundand species, whereas an S-shaped curve indicates a more stable community. In the latter case several species of the same abundance can be supported.">>=
rac(simu, which.result = NULL)
@
\end{center}


\paragraph{Trait plots:} For a closer look at the traits you can visualize them using the plotTraitDistribution function.
<<fig.cap= "The plotTraitDistribution plot consists of three different figures for the three traits in the model (environmental trait, competition trait, neutral trait). The upper panel illustrates the trait's magnitude in dependency of the environment for different species. The middle panel illustrates the spatial distribution of the given trait. The lower panel shows a histogram of the given trait.">>=
plotTraitDistribution(simu = simu, which.result = NULL, type ="all")
@


\paragraph{Reconstructed Phylogenies:} The function phyloReconstruct uses the species' traits to construct a phylogeny for the given community. These phylogenies can then be compared to the real phylogeny of the community:

<<fig.cap="Shows the reconstructed as well as the real phylogeny. It is visible that there are differences in the speces that make up the resulting communities as well as in their evolution / assembly">>=
Phyl   <- ape::drop.fossil(simu$Output[[2]]$phylogeny)
rePhyl <- phyloReconstruct(simu)

par(mfrow=c(1,2))
plot(rePhyl, main="reconstructed Phylogeny")
plot(Phyl, main="real Phylogeny")
@

\paragraph{Highlight Local Communities} The function hihglightLocalPhylo highlights a phylogeny of a local community within a metacommunity. 

<<fig.cap="Highlights a relatively large local community",fig.height=5.4>>=
highlightLocalPhylo(simu, size = 10,n = 1)
@
<<fig.cap="Highlights a relatively small local community",fig.height=5.4>>=
highlightLocalPhylo(simu, size = 5, n = 1)
@

Both figures show the phylogeny of the same metacommunity. But they highlight different local plots with different plotsizes (10 and 5). Obviously the larger plot is richer in species than the smaller one.  


\begin{figure}[h]
  \centering
	\includegraphics[width=8cm]{plots(1)} % without file extension
	\caption{Overview about the plotting functions in the Phylosim package. Functions are represented by bubbles, objects by circles. The arrows illustrate what is used as input parameter for the functions}\label{fig: plots}
\end{figure} 
\FloatBarrier
\newpage


\section{Summary statistics}

Quite a few of the functions suc as species-area curves, local phylogenies are based on the localPlots function, a simple observation model that creates random subplots of a given size within the metacommunity

<<>>=
localPlots(simu, size = 10, n = 2)
@



\section{Null Models}

To compare patterns in the results of the simualtions with random expectations, the package comprises a set of null models. The null model creates subplots from the metacommunity and tests them against random expecations. 

\paragraph{The nullModel function:} 

<<NullModel,eval = F>>=
pValues <- nullModel(simu = simu, abundance = FALSE, localPlotSize = 10, numberOfPlots = 20, repetitions = 100, fun="mpd")
@

\paragraph{The calculatePhylogeneticDispersion function:} The calculatePhylogeneticDispersion function and its associated plot functions are a convenience functions for a rather specialized application - the function calculates null models for all runs in a PhyloBatch object and for different plot sizes. Which null model is used is determined by the types argument with the following options.

\begin{itemize}
\item "PhylMeta" equivalent to the nullModell function with abundace = FALSE
\item "PhylSample"  equivalent to the nullModell function with abundace = TRUE
\item "PhylPool" uses picante::ses.mpd with null.model = "phylogeny.pool"
\item "SamplePool" uses picante::ses.mpd with null.model = "sample.pool"
\end{itemize}

<<CalcPhylDis,eval = F>>=
pValuesBatch <- calculatePhylogeneticDispersion(simuBatch, plotlength=3, plots=20, replicates=20, type="PhylMeta")
@
\newpage

The result can be visualized with the plotPhylogeneticDispersion function:

<<PlotPhylDis, fig.cap = "Shows different combinations of dispersal limitation (y-axis), environmental trait(upper x-axis) and density dependnce (lower x-axis). The respective colour shows the phylogenetic pattern (over- or underdispersed).">>=
data("pPD.pvalues")
data("pPD.positions")

plotPhylogeneticDispersion(pvalues = pPD.pvalues, positions = pPD.positions, title = "Null Meta")
@
   

\newpage
\bibliographystyle{chicago} 

\bibliography{Vignette_bib}





\end{document}
